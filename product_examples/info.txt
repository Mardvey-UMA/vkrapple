Я рзрабатываю backend для онлайн магазина товаров 
Я хочу протестировать работу основных контроллеров
У меня есть следующие категории товаров и их атрибуты 
```
val categoriesToCreate = listOf(
                "Ручка" to listOf("Производитель", "Толщина стержня", "Коллекция", "Цвет", "Кол-во в упаковке"),
                "Блокнот" to listOf("Производитель", "Линовка", "Кол-во страниц", "Коллекция", "Цвет"),
                "Ластик" to listOf("Производитель", "Коллекция", "Твердость"),
                "Стикер" to listOf("Производитель", "Коллекция", "Кол-во в наборе"),
            )
```
У меня есть контроллеры для создания товаров 
```
package ru.webshop.backend.controller

import org.slf4j.LoggerFactory
import org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties
import org.springframework.data.domain.Pageable
import org.springframework.data.web.PageableDefault
import org.springframework.http.ResponseEntity
import org.springframework.util.MultiValueMap
import org.springframework.web.bind.annotation.*
import ru.webshop.backend.dto.ProductCreateRequestDTO
import ru.webshop.backend.dto.ProductPageResponseDTO
import ru.webshop.backend.entity.Category
import ru.webshop.backend.service.interfaces.ProductService
import ru.webshop.backend.spec.ProductSpecifications

@RestController
@RequestMapping("/api/products")
class ProductsController(
    private val productService: ProductService
) {
    @PostMapping
    fun createProduct(@RequestBody request: ProductCreateRequestDTO
    ) = productService.createProduct(request)

    @GetMapping
    fun getAllProducts(
        @PageableDefault(size = 20, sort = ["name"]) pageable: Pageable
    ) = productService.getAllProducts(pageable)

    @GetMapping("/category/{categoryId}")
    fun getByCategory(
        @PathVariable categoryId: Long,
        @PageableDefault(size = 20) pageable: Pageable
    ) = productService.getProductsByCategory(categoryId, pageable)

    @GetMapping("/search")
    fun searchProducts(
        @RequestParam("categoryId") categoryId: Long,
        @RequestParam(required = false)
        params: MultiValueMap<String, String>,
        @PageableDefault(size = 20) pageable: Pageable
    ): ProductPageResponseDTO {

        val attributes = params
            .filterKeys { it.startsWith("attributes[") }
            .mapKeys {
                it.key
                    .removePrefix("attributes[")
                    .removeSuffix("]")
                    .toLongOrNull()
            }
            .filterKeys { it != null }
            .mapValues { (_, values) ->
                values.filter { value -> value.isNotBlank() }
            }
            .filterValues { it.isNotEmpty() }
            .mapKeys { it.key!! }

        return productService.searchProducts(categoryId, attributes, pageable)
    }
}
```
Нужно создать следующие товары (я перечислю самые важные параметры, остальные задай как сам захочешь)
"Ручка черная СГУ" Коллекция "СГУ - выбор лучших" фото pen1
"Набор ручек СГУ 3 шт." Коллекция "СГУ - выбор лучших" количество в наборе 3 шт фото pen2
"Ручка синяя СГУ"  Коллекция "СГУ - выбор лучших" фото pen1

"Стикерпарк Пейзажи СГУ" - кол-во в наборе 4 шт. Коллекция "Юбилей сгу" фото stckerpack1
"Стикер парк легенда СГУ" - кол-во в наборе 4 шт. Коллекция "Воспоминания СГУ"
фото stckerpack2
"Полный стикерпарк СГУ" - кол-во в наборе 8 шт. Коллекция "Юбилей СГУ" фото 
stcikerpack1, stickerpack2 (2 фото)
"Ластик СГУ" - кол-во в наборе 1 шт. 
